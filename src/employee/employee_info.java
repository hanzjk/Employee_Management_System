/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package employee;

//Import the packages containing the JDBC classes needed for database programming
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import com.mysql.jdbc.ResultSetMetaData;

//Other Packages
//import packages to get logging fascilities, date format and match string against regular expressions,
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import java.util.Date; //To represent date- provides the Date class available in java.util package

import com.toedter.calendar.JTextFieldDateEditor;
import java.text.ParseException; //Check for parsing exceptions
import java.text.SimpleDateFormat; //To format and parse date
import java.util.Vector;
import java.sql.Types;

//Import the packages which provide classes for java swing API 
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hansi Karunarathna
 */
public class employee_info extends javax.swing.JFrame {

    /**
     * Creates new form employee_info
     */
    public employee_info() {
        initComponents();
        table_update();

        JTextFieldDateEditor editor = (JTextFieldDateEditor) date_chooser.getDateEditor();
        editor.setEditable(false);
    }

    private Connection db_connection() {
        String dbURL = "jdbc:mysql://localhost/company";
        String username = "root";
        String password = "";

        Connection connection = null; //Initialize Connection object
        try {
            // This will load the MySQL driver, each DB has its own driver
            Class.forName("com.mysql.jdbc.Driver");

            //Setup the connection with the DB
            connection = DriverManager.getConnection(dbURL, username, password);

        } //Exception Handling
        catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            Logger.getLogger(employee_info.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            Logger.getLogger(employee_info.class.getName()).log(Level.SEVERE, null, ex);
        }
        return connection;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtLname = new javax.swing.JTextField();
        txtSsn = new javax.swing.JTextField();
        txtMinit = new javax.swing.JTextField();
        txtFname = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        txtSalary = new javax.swing.JTextField();
        txtDno = new javax.swing.JTextField();
        txtSuper_ssn = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        sex_ComboBox = new javax.swing.JComboBox<>();
        date_chooser = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel1.setText("Employee Information");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employee Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 16))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel2.setText("First Name");

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel3.setText("Minit");

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel4.setText("Last Name");

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel5.setText("Ssn");

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel6.setText("Date of Birth");

        jLabel8.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel8.setText("Address");

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel7.setText("Sex");

        jLabel9.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel9.setText("Salary");

        jLabel10.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel10.setText("Super_Ssn");

        jLabel11.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel11.setText("Department No");

        txtLname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLnameActionPerformed(evt);
            }
        });

        txtSsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSsnActionPerformed(evt);
            }
        });

        txtMinit.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtMinit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMinitActionPerformed(evt);
            }
        });

        txtFname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFnameActionPerformed(evt);
            }
        });

        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        txtSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalaryActionPerformed(evt);
            }
        });

        txtDno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDnoActionPerformed(evt);
            }
        });

        txtSuper_ssn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSuper_ssnActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton1.setText("Insert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        sex_ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Female", "Male" }));
        sex_ComboBox.setSelectedIndex(-1);
        sex_ComboBox.setToolTipText("");
        sex_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sex_ComboBoxActionPerformed(evt);
            }
        });

        date_chooser.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(41, 41, 41))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(sex_ComboBox, 0, 267, Short.MAX_VALUE)
                    .addComponent(txtSuper_ssn, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDno, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLname, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSsn, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMinit, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFname, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAddress, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSalary, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(date_chooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(107, 107, 107))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMinit, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLname, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtSsn, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(date_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(sex_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSuper_ssn, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDno, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fname", "Minit", "Lname", "Ssn", "Bdate", "Address", "Sex", "Salary", "Super_ssn", "Dno"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Short.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setRowHeight(30);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 772, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(569, 569, 569))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtSuper_ssnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSuper_ssnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSuper_ssnActionPerformed

    private void txtDnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDnoActionPerformed

    private void txtSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSalaryActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void txtFnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFnameActionPerformed

    private void txtMinitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMinitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMinitActionPerformed

    private void txtSsnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSsnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSsnActionPerformed

    private void txtLnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLnameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        //check_input() function is called to validate input before inserting values to database
        if (check_input()) {
            try {
                //Date type for each attribute is defined

                String Fname = txtFname.getText();
                String Minit = txtMinit.getText();
                String Lname = txtLname.getText();
                String Ssn = txtSsn.getText();

                Date bdt = date_chooser.getDate(); //Get the date from the date picker using a third party library 'JCalender'
                java.sql.Date Bdate = new java.sql.Date(bdt.getTime());

                String Address = txtAddress.getText();

                String Sex = null; //A Combo Box (List box) is used to select the Sex
                if ((String) sex_ComboBox.getSelectedItem() == "Female") {
                    Sex = "F";
                } else if ((String) sex_ComboBox.getSelectedItem() == "Male") {
                    Sex = "M";
                }

                Integer Salary = Integer.parseInt(txtSalary.getText());
                String Super_ssn = txtSuper_ssn.getText();

                Integer Dno = Integer.parseInt(txtDno.getText());

                Connection con = db_connection();// Connect to DB

                // create the mysql insert preparedstatement
                PreparedStatement insert = con.prepareStatement("insert into employee(Fname,Minit,Lname,Ssn,Bdate,Address,Sex,Salary,Super_ssn,Dno) values (?,?,?,?,?,?,?,?,?,?)");

                // Set Parameters - Parameters start with 1
                insert.setString(1, Fname);
                insert.setString(2, Minit);
                insert.setString(3, Lname);
                insert.setString(4, Ssn);
                insert.setDate(5, Bdate);
                insert.setString(6, Address);
                insert.setString(7, Sex);
                insert.setInt(8, Salary);
                if (Super_ssn.isEmpty()) { //Super_ssn can contain NULL values;If the field is empty insert NULL to that coloumn
                    insert.setNull(9, Types.NULL);
                } else {
                    insert.setString(9, Super_ssn);
                }

                insert.setInt(10, Dno);
                insert.executeUpdate();

                JOptionPane.showMessageDialog(this, "Record Added"); //Display the successful message

                //Reset text fields after inserting the record
                txtFname.setText("");
                txtMinit.setText("");
                txtLname.setText("");
                txtSsn.setText("");
                date_chooser.setDate(null);
                txtAddress.setText("");
                sex_ComboBox.setSelectedItem(null);
                txtSalary.setText("");
                txtSuper_ssn.setText("");
                txtDno.setText("");

                txtFname.requestFocus(); //Move the cursor to the First_Name text field
                table_update(); //update the values in the table in UI
                con.close(); //Close the connection after inserting data

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
                Logger.getLogger(employee_info.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();

        txtFname.setText(Df.getValueAt(selectedIndex, 0).toString());
        txtMinit.setText(Df.getValueAt(selectedIndex, 1).toString());
        txtLname.setText(Df.getValueAt(selectedIndex, 2).toString());
        txtSsn.setText(Df.getValueAt(selectedIndex, 3).toString());

        String dt = Df.getValueAt(selectedIndex, 4).toString();
        Date b_date = null;
        try {
            b_date = new SimpleDateFormat("yyyy-MM-dd").parse(dt);
        } catch (ParseException ex) {
            Logger.getLogger(employee_info.class.getName()).log(Level.SEVERE, null, ex);
        }
        date_chooser.setDate(b_date);

        txtAddress.setText(Df.getValueAt(selectedIndex, 5).toString());

        if ("F".equals(Df.getValueAt(selectedIndex, 6).toString())) {
            sex_ComboBox.setSelectedItem("Female");
        } else if ("M".equals(Df.getValueAt(selectedIndex, 6).toString())) {
            sex_ComboBox.setSelectedItem("Male");
        }

        txtSalary.setText(Df.getValueAt(selectedIndex, 7).toString());
        
        if(Df.getValueAt(selectedIndex, 8).toString()=="NULL") 
            txtSuper_ssn.setText("");
        else 
            txtSuper_ssn.setText(Df.getValueAt(selectedIndex, 8).toString());
        
        txtDno.setText(Df.getValueAt(selectedIndex, 9).toString());

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow(); //index of the selected row

        //check_input() function is called to validate input before updating values 
        if (check_input()) {
            try {
                //Date type for each attribute is defined
                String Ssn = String.valueOf(Df.getValueAt(selectedIndex, 3)); //get the Ssn of the selected employee
                String Fname = txtFname.getText();
                String Minit = txtMinit.getText();
                String Lname = txtLname.getText();

                Date bdt = date_chooser.getDate();
                java.sql.Date Bdate = new java.sql.Date(bdt.getTime());

                String Address = txtAddress.getText();
                String Sex = null;
                if ((String) sex_ComboBox.getSelectedItem() == "Female") {
                    Sex = "F";
                } else if ((String) sex_ComboBox.getSelectedItem() == "Male") {
                    Sex = "M";
                }
                Integer Salary = Integer.parseInt(txtSalary.getText());
                String Super_ssn = txtSuper_ssn.getText();
                Integer Dno = Integer.parseInt(txtDno.getText());

                Connection con = db_connection();// Connect to DB

                // create the mysql update preparedstatement
                PreparedStatement update = con.prepareStatement("update employee set Fname=?,Minit=?,Lname=?,Bdate=?,Address=?,Sex=?,Salary=?,Super_ssn=?,Dno=? where Ssn=?");

                // Set Parameters - Parameters start with 1
                update.setString(1, Fname);
                update.setString(2, Minit);
                update.setString(3, Lname);
                update.setDate(4, Bdate);
                update.setString(5, Address);
                update.setString(6, Sex);
                update.setInt(7, Salary);
                if (Super_ssn.isEmpty()) {
                    update.setNull(8, Types.NULL);
                } else {
                    update.setString(8, Super_ssn);
                }
                update.setInt(9, Dno);
                update.setString(10, Ssn);
                update.executeUpdate();

                JOptionPane.showMessageDialog(this, "Record Updated"); //Display the success message

                //Reset Fields after updating the record
                txtFname.setText("");
                txtMinit.setText("");
                txtLname.setText("");
                txtSsn.setText("");
                date_chooser.setDate(null);
                txtAddress.setText("");
                sex_ComboBox.setSelectedItem(null);
                txtSalary.setText("");
                txtSuper_ssn.setText("");
                txtDno.setText("");

                txtFname.requestFocus(); //Move the cursor to the First_Name text field
                table_update(); //update the values in the table in UI
                con.close(); //Close the connection after updating data

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
                Logger.getLogger(employee_info.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow(); //index of the selected row 

        try {
            String Ssn = String.valueOf(Df.getValueAt(selectedIndex, 3)); //get the Ssn of the selected employee

            int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to delete the record ", "Warning", JOptionPane.YES_NO_OPTION); //Cofirmation box
            if (dialogResult == JOptionPane.YES_OPTION) {
                Connection con = db_connection(); // Connect to DB
                PreparedStatement delete = con.prepareStatement("delete from employee where Ssn=?"); // create the mysql delete preparedstatement
                delete.setString(1, Ssn);
                delete.executeUpdate();

                JOptionPane.showMessageDialog(this, "Record Deleted"); //display success message

                //Reset Fields after deleting the record
                txtFname.setText("");
                txtMinit.setText("");
                txtLname.setText("");
                txtSsn.setText("");
                date_chooser.setDate(null);
                txtAddress.setText("");
                sex_ComboBox.setSelectedItem(null);
                txtSalary.setText("");
                txtSuper_ssn.setText("");
                txtDno.setText("");

                txtFname.requestFocus(); //Move the cursor to the First_Name text field
                table_update(); //update the values in the table in UI
                con.close(); //Close the connection after updating dataF
            }
        } catch (SQLException ex) {
            Logger.getLogger(employee_info.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void sex_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sex_ComboBoxActionPerformed

    }//GEN-LAST:event_sex_ComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    ///////////////////////////////////////////
    private boolean check_input() {
        boolean validity = true;
        if (txtFname.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Empty Field : Please Enter your First Name");
            validity = false;
        } else {
            if (!Pattern.matches("[a-zA-Z]+", txtFname.getText())) {
                JOptionPane.showMessageDialog(null, "Invalid Content : First Name field should contain only letters");
                validity = false;
            }
        }

        if (txtMinit.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Empty Field : Please Enter a value for Minit");
            validity = false;
        } else {
            if (!Pattern.matches("[a-zA-Z]{1}", txtMinit.getText())) {
                JOptionPane.showMessageDialog(null, "Invalid Content : Minit field should contain only a single letter");
                validity = false;
            }
        }

        if (txtLname.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Empty Field : Please Enter your Last Name");
            validity = false;
        } else {
            if (!Pattern.matches("[a-zA-Z]+", txtLname.getText())) {
                JOptionPane.showMessageDialog(null, "Invalid Content : Last Name field should contain only letters");
                validity = false;
            }
        }

        if (txtSsn.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Empty Field : Please Enter your Ssn");
            validity = false;
        } else {
            if (!Pattern.matches("[0-9]+", txtSsn.getText())) {
                JOptionPane.showMessageDialog(null, "Invalid Content : Ssn field should contain only digits");
                validity = false;
            }
        }

        if (txtAddress.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Empty Field : Please Enter your Address");
            validity = false;
        }

        if ((String) sex_ComboBox.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Empty Field : Please Coose your Sex");
            validity = false;
        }

        if (txtSalary.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Empty Field : Please Enter your Salary");
            validity = false;
        } else {
            if (!Pattern.matches("[0-9]+", txtSalary.getText())) {
                JOptionPane.showMessageDialog(null, "Invalid Content : Salary field should contain only digits");
                validity = false;
            }
            if (Integer.parseInt(txtSalary.getText()) < 0) {
                JOptionPane.showMessageDialog(null, "Invalid Content : Salary cannot be negative");
                validity = false;
            }
        }

        if (!txtSuper_ssn.getText().isBlank()) {
            if (!Pattern.matches("[0-9]+", txtSuper_ssn.getText())) {
                JOptionPane.showMessageDialog(null, "Invalid Content : Super Ssn field should contain only digits");
                validity = false;
            }
        }

        if (txtDno.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Empty Field : Please Enter a value for Department No");
            validity = false;
        } else {
            if (!Pattern.matches("[0-9]{1}", txtDno.getText())) {
                JOptionPane.showMessageDialog(null, "Invalid Content : Department Numer should contain only a single digit");
                validity = false;
            }
        }

        return validity;

    }

    ///////////////////////////////////////////////
    private void table_update() {
        int c; //store column count
        try {
            Connection con = db_connection(); //connect to DB
            PreparedStatement view = con.prepareStatement("select * from employee"); // create the mysql select preparedstatement
            ResultSet result = view.executeQuery();//store the result of the query
            ResultSetMetaData Rss = (ResultSetMetaData) result.getMetaData();
            c = Rss.getColumnCount();
            DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
            Df.setRowCount(0);

            while (result.next()) {
                Vector v = new Vector();//vector to the record
                for (int a = 1; a <= c; a++) {
                    v.add(result.getString("Fname"));
                    v.add(result.getString("Minit"));
                    v.add(result.getString("Lname"));
                    v.add(result.getString("Ssn"));
                    v.add(result.getString("Bdate"));
                    v.add(result.getString("Address"));
                    v.add(result.getString("Sex"));
                    v.add(result.getInt("Salary"));
                    if(result.getString("Super_ssn")==null) //if the super_ssn is NULL ad NULL 
                        v.add("NULL");
                    else
                        v.add(result.getString("Super_ssn"));
                    v.add(result.getInt("Dno"));
                }
                Df.addRow(v); //Add the record to the Table
            }
            con.close(); //close the DB connection
        } catch (SQLException ex) {
            Logger.getLogger(employee_info.class.getName()).log(Level.SEVERE, null, ex);}
    }

    ////////////////////////////////////////////////
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(employee_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(employee_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(employee_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(employee_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new employee_info().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser date_chooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> sex_ComboBox;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtDno;
    private javax.swing.JTextField txtFname;
    private javax.swing.JTextField txtLname;
    private javax.swing.JTextField txtMinit;
    private javax.swing.JTextField txtSalary;
    private javax.swing.JTextField txtSsn;
    private javax.swing.JTextField txtSuper_ssn;
    // End of variables declaration//GEN-END:variables
}
